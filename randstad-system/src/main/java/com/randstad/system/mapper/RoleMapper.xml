<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.randstad.system.mapper.RoleMapper" >
	<resultMap id="RoleBaseMap" type="com.randstad.system.entity.Role" >
		<id column="ID" property="id" jdbcType="BIGINT" />
		<result column="ROLE_CODE" property="roleCode" jdbcType="VARCHAR" />
		<result column="ROLE_NAME" property="roleName" jdbcType="VARCHAR" />
		<result column="ROLE_DESC" property="roleDesc" jdbcType="VARCHAR" />
		<result column="ROLE_STATUS" property="roleStatus" jdbcType="INTEGER" />
		<result column="WELCOME_URL" property="welcomeUrl" jdbcType="VARCHAR" />
		<result column="ORDER_NO" property="orderNo" jdbcType="INTEGER" />
		<result column="CREATE_BY" property="createBy" jdbcType="BIGINT" />
		<result column="CREATE_DATE" property="createDate" jdbcType="TIMESTAMP" />
		<result column="UPDATE_BY" property="updateBy" jdbcType="BIGINT" />
		<result column="UPDATE_DATE" property="updateDate" jdbcType="TIMESTAMP" />
	</resultMap>

	<resultMap id="RoleMap" type="com.randstad.system.entity.Role" extends="RoleBaseMap" >
		<!-- to add extended property -->
	</resultMap>
	
	<!-- 新增 -->
	<insert id="insert" parameterType="com.randstad.system.entity.Role">
		<selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
			SELECT SCOPE_IDENTITY()
		</selectKey>
		insert into T_ROLE ( ROLE_CODE, ROLE_NAME, ROLE_DESC, 
			ROLE_STATUS, WELCOME_URL, ORDER_NO, 
			CREATE_BY, CREATE_DATE, UPDATE_BY, 
			UPDATE_DATE )
		values ( #{roleCode, jdbcType=VARCHAR}, #{roleName, jdbcType=VARCHAR}, #{roleDesc, jdbcType=VARCHAR}, 
			#{roleStatus, jdbcType=INTEGER}, #{welcomeUrl, jdbcType=VARCHAR}, #{orderNo, jdbcType=INTEGER}, 
			#{createBy, jdbcType=BIGINT}, #{createDate, jdbcType=TIMESTAMP}, #{updateBy, jdbcType=BIGINT}, 
			#{updateDate, jdbcType=TIMESTAMP} )
	</insert>
	
	<!-- 修改 -->
	<update id="update" parameterType="com.randstad.system.entity.Role" >
		update T_ROLE
		set ROLE_CODE = #{roleCode, jdbcType=VARCHAR}, 
			ROLE_NAME = #{roleName, jdbcType=VARCHAR}, 
			ROLE_DESC = #{roleDesc, jdbcType=VARCHAR}, 
			ROLE_STATUS = #{roleStatus, jdbcType=INTEGER}, 
			WELCOME_URL = #{welcomeUrl, jdbcType=VARCHAR}, 
			ORDER_NO = #{orderNo, jdbcType=INTEGER}, 
			CREATE_BY = #{createBy, jdbcType=BIGINT}, 
			CREATE_DATE = #{createDate, jdbcType=TIMESTAMP}, 
			UPDATE_BY = #{updateBy, jdbcType=BIGINT}, 
			UPDATE_DATE = #{updateDate, jdbcType=TIMESTAMP}
		where ID = #{id, jdbcType=BIGINT}
	</update>
	
	<!-- 按主键删除 -->
	<delete id="deleteById" parameterType="java.lang.Long" >
		delete from T_ROLE
		where ID = #{value, jdbcType=BIGINT}
	</delete>

	<sql id="Base_Column_List" >
		T_ROLE.ID, T_ROLE.ROLE_CODE, T_ROLE.ROLE_NAME, T_ROLE.ROLE_DESC, T_ROLE.ROLE_STATUS, 
		T_ROLE.WELCOME_URL, T_ROLE.ORDER_NO, T_ROLE.CREATE_BY, T_ROLE.CREATE_DATE, T_ROLE.UPDATE_BY, 
		T_ROLE.UPDATE_DATE
	</sql>
	
	<sql id="Column_List">
		<include refid="Base_Column_List" />
	</sql>
	
	<!-- 按主键查询 -->
	<select id="findById" resultMap="RoleMap" parameterType="java.lang.Long" >
		select 
		<include refid="Column_List" />
		from T_ROLE 
		where T_ROLE.ID = #{value, jdbcType=BIGINT}
	</select>
	
	<sql id="Where_By_Params" >
		<trim prefix="WHERE" prefixOverrides="AND|OR" >
			<if test="id != null" >
				AND T_ROLE.ID = #{id, jdbcType=BIGINT}
			</if>
			<if test="roleCode != null" >
				AND T_ROLE.ROLE_CODE = #{roleCode, jdbcType=VARCHAR}
			</if>
			<if test="roleName != null" >
				AND T_ROLE.ROLE_NAME = #{roleName, jdbcType=VARCHAR}
			</if>
			<if test="roleDesc != null" >
				AND T_ROLE.ROLE_DESC = #{roleDesc, jdbcType=VARCHAR}
			</if>
			<if test="roleStatus != null" >
				AND T_ROLE.ROLE_STATUS = #{roleStatus, jdbcType=INTEGER}
			</if>
			<if test="welcomeUrl != null" >
				AND T_ROLE.WELCOME_URL = #{welcomeUrl, jdbcType=VARCHAR}
			</if>
			<if test="orderNo != null" >
				AND T_ROLE.ORDER_NO = #{orderNo, jdbcType=INTEGER}
			</if>
			<if test="createBy != null" >
				AND T_ROLE.CREATE_BY = #{createBy, jdbcType=BIGINT}
			</if>
			<if test="createDate != null" >
				AND T_ROLE.CREATE_DATE = #{createDate, jdbcType=TIMESTAMP}
			</if>
			<if test="updateBy != null" >
				AND T_ROLE.UPDATE_BY = #{updateBy, jdbcType=BIGINT}
			</if>
			<if test="updateDate != null" >
				AND T_ROLE.UPDATE_DATE = #{updateDate, jdbcType=TIMESTAMP}
			</if>
			
			<include refid="Where_Clause" />
		</trim>
	</sql>
	
	<sql id="Where_Clause">
		<if test="@Ognl@isNotEmpty(userId)" >
			AND EXISTS (SELECT 1 FROM ROLE_USER WHERE AND ROLE_USER.ID = T_ROLE.ID AND ROLE_USER.USER_ID = #{userId, jdbcType=BIGINT})
		</if>
		<if test="@Ognl@isNotEmpty(userName)" >
			AND EXISTS (SELECT 1 FROM T_USER, ROLE_USER WHERE T_USER.USER_ID = ROLE_USER.USER_ID AND AND ROLE_USER.ID = T_ROLE.ID AND T_USER.USER_NAME = #{userName, jdbcType=VARCHAR})
		</if>
	</sql>
	
	<!-- 按参数统计 -->
	<select id="countByParams" resultType="java.lang.Integer" parameterType="Map" >
		select count(1) 
		from T_ROLE
		<include refid="Where_By_Params" />
	</select>
	
	<!-- 按参数查询 -->
	<select id="findByParams" resultMap="RoleMap" parameterType="Map" >
		select 
		<include refid="Column_List" />
		from T_ROLE
		<include refid="Where_By_Params" />
		<choose>
			<when test="orderByClause != null">
				order by ${orderByClause}
			</when>
			<otherwise>
				order by ID
			</otherwise>
		</choose>
	</select>
	
	<!-- 按用户查询 -->
	<select id="findByUserId" resultMap="RoleMap" parameterType="java.lang.Long" >
		select  
		<include refid="Base_Column_List" />
		from T_ROLE
		where EXISTS (SELECT 1 FROM ROLE_USER WHERE AND ROLE_USER.ID = T_ROLE.ID AND ROLE_USER.USER_ID = #{userId, jdbcType=BIGINT})
		order by ORDER_NO
	</select>
	
	<!-- 按用户查询 -->
	<select id="findByUserName" resultMap="RoleMap" parameterType="String" >
		select  
		<include refid="Base_Column_List" />
		from T_ROLE
		where EXISTS (SELECT 1 FROM ROLE_USER WHERE AND ROLE_USER.ID = T_ROLE.ID AND ROLE_USER.USER_NAME = #{userName, jdbcType=VARCHAR})
		order by ORDER_NO
	</select>
</mapper>